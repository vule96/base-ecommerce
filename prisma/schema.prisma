generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(uuid()) @map("id") @db.Uuid
  avatar          String?      @map("avatar") @db.VarChar(255)
  email           String       @unique @map("email")
  username        String       @unique @map("username")
  isEmailVerified Boolean      @default(false) @map("is_email_verified")
  firstName       String       @map("first_name") @db.VarChar(100)
  lastName        String       @map("last_name") @db.VarChar(100)
  password        String       @map("password") @db.VarChar(100)
  salt            String       @map("salt") @db.VarChar(50)
  status          user_status? @default(active) @map("status")
  role            user_role    @default(user) @map("role")
  createdAt       DateTime     @default(now()) @map("created_at") @db.Timestamptz
  updatedAt       DateTime     @default(now()) @map("updated_at") @db.Timestamptz
  token           Token?

  @@index([status], map: "status")
  @@index([role], map: "role")
  @@map("user")
}

model Token {
  token     String   @id @map("token")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz
  userId    String   @unique @map("user_id") @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "user_id")
  @@map("token")
}

enum user_status {
  active
  inactive
}

enum user_role {
  user
  admin
}
